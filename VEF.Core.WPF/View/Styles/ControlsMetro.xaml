<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
                      xmlns:conv="clr-namespace:VEF.Interfaces.Converters"
                  
                    >

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="VS2012/Menu.xaml" />-->
        <!--<ResourceDictionary Source="VS2012/Toolbar.xaml" />-->
        <!--<ResourceDictionary Source="VS2012/Tooltip.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <conv:MenuVisibilityConverter x:Key="cvc" />


    <!--<Style TargetType="{x:Type ContextMenu}" x:Key="MetroContextMenu2">
        <Setter Property="Background" Value="{DynamicResource ControlOpenColorBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlOpenColorBrush}" />
        <Setter Property="Padding" Value="0,2,0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Margin="2" x:Name="Menu" Opacity="0" BorderBrush="{TemplateBinding BorderBrush}"
BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0"
Effect="{DynamicResource StandardDropShadow}">
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Rectangle.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity"
Storyboard.TargetName="Menu" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                        <Grid>
                            <ItemsPresenter Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--<Style x:Key="StandardMenu" TargetType="Menu">
        --><!--<Setter Property="OverridesDefaultStyle" Value="True" />--><!--
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border Background="{DynamicResource WindowTitleColorBrush}"
BorderBrush="{DynamicResource WindowTitleColorBrush}" BorderThickness="1">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--Set default styles-->
    <!--<Style TargetType="Separator" BasedOn="{StaticResource MetroSeparator}" />
    <Style TargetType="MenuItem" BasedOn="{StaticResource MetroMenuItem}" />
    <Style TargetType="Menu" BasedOn="{StaticResource StandardMenu}" />-->
    <!--<Style TargetType="ContextMenu" BasedOn="{StaticResource MetroContextMenu2}" />-->
    <!--<Style TargetType="avalonDock:ContextMenuEx" BasedOn="{StaticResource MetroContextMenu}" />
<Style TargetType="avalonDock:MenuItemEx" BasedOn="{StaticResource MetroMenuItem}" />-->
    
    <Style x:Key="{x:Type ToolTip}"
TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle"
Value="true" />
        <Setter Property="HasDropShadow"
Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
BorderThickness="1"
Width="{TemplateBinding Width}"
Height="{TemplateBinding Height}" Background="{DynamicResource WhiteBrush}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource AccentColor}" />
                        </Border.BorderBrush>
                        <ContentPresenter Margin="4"
HorizontalAlignment="Left"
VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
Value="true">
                            <Setter TargetName="Border"
Property="CornerRadius"
Value="4" />
                            <Setter TargetName="Border"
Property="SnapsToDevicePixels"
Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Menu Item Binding with Icon-->
    <Image x:Key="imgCTX" x:Shared="false" Source="{Binding Path=Icon}" Height="16px" Width="16px" />
    <Style x:Key="MetroMenuStyle" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="Icon" Value="{StaticResource imgCTX}" />
        <Setter Property="Header" Value="{Binding Path=Header}" />
        <Setter Property="IsCheckable" Value="{Binding Path=IsCheckable}" />
        <Setter Property="IsChecked" Value="{Binding Path=IsChecked}" />
        <Setter Property="Command" Value="{Binding Path=Command}" />
        <Setter Property="CommandParameter" Value="{Binding Path=CommandParameter}" />
        <Setter Property="ItemsSource" Value="{Binding Children}" />
        <Setter Property="InputGestureText" Value="{Binding InputGestureText}" />
        <Setter Property="Visibility" Value="{Binding ., Converter={StaticResource ResourceKey=cvc}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSeparator}" Value="true">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="30" Width="Auto" SharedSizeGroup="Icon" />
                                    <ColumnDefinition MinWidth="70" Width="*" />
                                </Grid.ColumnDefinitions>
                                <Separator Grid.Column="1" Height="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                <Setter Property="Icon" Value="{x:Null}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolbarContextMenu" TargetType="MenuItem"  BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="Header" Value="{Binding Path=Header}" />
        <Setter Property="IsCheckable" Value="True" />
        <Setter Property="IsChecked" Value="{Binding Path=IsChecked}" />
        <Setter Property="Command" Value="{Binding Path=Command}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Key}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSeparator}" Value="true">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="30" Width="Auto" SharedSizeGroup="Icon" />
                                    <ColumnDefinition MinWidth="70" Width="*" />
                                </Grid.ColumnDefinitions>
                                <Separator Grid.Column="1" Height="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--<Style TargetType="{x:Type ContextMenu}" x:Key="MetroContextMenu">
        <Setter Property="Background" Value="{DynamicResource ControlOpenColorBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlOpenColorBrush}" />
        <Setter Property="Padding" Value="0,2,0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Margin="2" x:Name="Menu" Opacity="0" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0"
                            Effect="{DynamicResource StandardDropShadow}">
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Rectangle.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="Menu" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                        <Grid>
                            <ItemsPresenter Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--Set default styles-->
    <!--<Style TargetType="Separator"  BasedOn="{StaticResource {x:Type Separator}}" />
    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" />
    <Style TargetType="Menu" BasedOn="{StaticResource {x:Type Menu}}" />
    <Style TargetType="ContextMenu" BasedOn="{StaticResource {x:Type ContextMenu}}" />-->

</ResourceDictionary>